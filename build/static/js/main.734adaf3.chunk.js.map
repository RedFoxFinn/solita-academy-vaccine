{"version":3,"sources":["reportWebVitals.js","components/home.jsx","components/vaccine.jsx","components/vaccination.jsx","tools/inforeader.js","components/navigator.jsx","tools/devstring.js","tools/idGen.js","components/header.jsx","components/footer.jsx","components/frontend.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","id","Vaccine","orderNumber","responsiblePerson","healthCareDistrict","vaccine","injections","arrived","arrivalDate","Date","expirationDate","valueOf","toLocaleString","Vaccination","vaccinationId","gender","sourceBottle","vaccinationDate","appid","packageinfo","toString","appname","authorinfo","author","repoinfo","repository","vaccineSample","vaccinationSample","Routing","inforeader","vaccination","className","exact","path","children","Navigator","props","activeStyle","color","textDecoration","textDecorationColor","inactiveStyle","separator","style","Fragment","to","isDev","string","idGen","parentId","idFor","Heading","data-testid","Header","Footer","href","url","title","name","alias","Frontend","baseId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.734adaf3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Home = ({id}) => {\n  return <section>\n    <p>Home</p>\n  </section>;\n};\n\nexport default Home;","import React from 'react';\n\nconst Vaccine = ({\n  id,\n  orderNumber,\n  responsiblePerson,\n  healthCareDistrict,\n  vaccine,\n  injections,\n  arrived\n}) => {\n  const arrivalDate = new Date(arrived);\n  const monthInMilliseconds = 30*24*60*60*1000;\n  const expirationDate = new Date(arrivalDate.valueOf()+monthInMilliseconds);\n  return <section>\n    <p>this is the data of one vaccine order</p>\n    <p>{id}</p>\n    <p>{orderNumber}</p>\n    <p>{responsiblePerson}</p>\n    <p>{healthCareDistrict}</p>\n    <p>{vaccine}</p>\n    <p>{injections}</p>\n    <p>{arrivalDate.toLocaleString()}</p>\n    <p>{expirationDate.toLocaleString()}</p>\n  </section>;\n};\n\nexport default Vaccine;","import React from 'react';\n\nconst Vaccination = ({\n  vaccinationId,\n  gender,\n  sourceBottle,\n  vaccinationDate\n}) => {\n  const vaccineOrder = sourceBottle;\n  return <section>\n    <p>this is the data of one vaccination</p>\n    <p>{vaccinationId}</p>\n    <p>{gender}</p>\n    <p>{new Date(vaccinationDate).valueOf()}</p>\n    <p>{sourceBottle}</p>\n    <p>vaccine order info here</p>\n  </section>;\n};\n\nexport default Vaccination;","/* eslint-disable import/no-anonymous-default-export */\nimport packageinfo from '../../package.json';\n\nimport vaccineSample from '../data/vaccinesample.json';\nimport vaccinationSample from '../data/vaccinationsample.json';\n\nfunction getAppid() {\n  return packageinfo.appid.toString();\n}\n\nfunction getAppname() {\n  return packageinfo.appname[0].toString();\n}\n\nfunction getAuthorinfo() {\n  return packageinfo.author;\n}\n\nfunction getRepoinfo() {\n  return packageinfo.repository;\n}\n\nfunction getVaccineSample() {\n  return vaccineSample;\n}\n\nfunction getVaccinationSample() {\n  return vaccinationSample;\n}\n\nexport default {\n  appid: getAppid,\n  appname: getAppname,\n  authorinfo: getAuthorinfo,\n  repoinfo: getRepoinfo,\n  vaccineSample: getVaccineSample,\n  vaccinationSample: getVaccinationSample\n};","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\n\nimport Home from './home';\nimport Vaccine from './vaccine';\nimport Vaccination from './vaccination';\n\nimport inforeader from '../tools/inforeader';\n\nimport '../styles/global.css';\nimport '../styles/elements.css';\n\nconst Navigator = (props) => {\n  const activeStyle = {color: 'rgb(61,61,61)', textDecoration: 'solid underline', textDecorationColor: 'rgb(220,30,50)'};\n  const inactiveStyle = {color: 'rgb(61,61,61)', textDecoration: 'none'};\n  const separator = <p style={{color: 'rgb(61,61,61'}}> |Â </p>;\n  return <React.Fragment>\n    <nav className='row navigator' >\n      <NavLink to='/' inactiveStyle={inactiveStyle} >Home</NavLink>\n      {separator}\n      <NavLink to='/data' activeStyle={activeStyle} inactiveStyle={inactiveStyle} >Data</NavLink>\n      {separator}\n      <NavLink to='/orders' activeStyle={activeStyle} inactiveStyle={inactiveStyle} >Orders</NavLink>\n      {separator}\n      <NavLink to='/vaccinations' activeStyle={activeStyle} inactiveStyle={inactiveStyle} >Vaccinations</NavLink>\n    </nav>\n  </React.Fragment>;\n};\n\nexport const Routing = () => {\n  const vaccine = inforeader.vaccineSample();\n  const vaccination = inforeader.vaccinationSample();\n  return <section className='viewer'>\n    <Switch>\n      <Route exact path='/' children={<Home />} />\n      <Route path='/data' children={<p>data view</p>} />\n      <Route path='/orders' children={<Vaccine {...vaccine}/>} />\n      <Route path='/vaccinations' children={<Vaccination {...vaccination}/>} />\n    </Switch>\n  </section>;\n};\n\nexport default Navigator;","function makeItDev(string) {\n  return `[${string}]`;\n}\n\nfunction isDev(string) {\n  return process.env.NODE_ENV !== 'production'\n    ? makeItDev(string)\n    : string;\n}\n\nexport default isDev;","\n/*\n  Author:       RedFoxFinn - Antti Aarnio\n  Project:      solita-academy-vaccine\n  File:         ./src/tools/idGen.js\n  Description:  Tool that generates id's for the components or elements using parent id\n*/\n\nconst idGen = (parentId, idFor, ...rest) => {\n  switch (idFor) {\n    case 'frontend': return `${parentId}.frontend`;\n    case 'header': return `${parentId}.header`;\n    case 'heading': return `${parentId}.heading`;\n    case 'footer': return `${parentId}.footer`;\n    case 'order': return `${parentId}.order.${rest[0]}`;\n    case 'vaccination': return `${parentId}.vaccination.${rest[0]}`;\n    case 'navigator': return `${parentId}.navigator`;\n    case 'navlink': return `${parentId}.navlink.${rest[0]}`;\n    default: return `${parentId}.default`;\n  }\n};\n\nexport default idGen;","import React from 'react';\n\nimport Navigator from './navigator';\n\nimport isDev from '../tools/devstring';\nimport idGen from '../tools/idGen';\nimport inforeader from '../tools/inforeader';\n\nimport '../styles/elements.css';\n\nconst Header = ({id}) => {\n  return <section id={id} data-testid={id} className='topelement' >\n    <Heading id={idGen(id, 'heading')} />\n    <Navigator id={idGen(id, 'navigator')} />\n  </section>;\n};\n\nconst Heading = ({id}) => {\n  return <section className='header' id={id} data-testid={id} >\n    <h2 >{isDev(inforeader.appname())}</h2>\n  </section>;\n};\n\nexport default Header;","import React from 'react';\n\nimport isDev from '../tools/devstring';\nimport inforeader from '../tools/inforeader';\n\nimport '../styles/elements.css';\n\nconst Footer = (props) => {\n  const repoinfo = inforeader.repoinfo();\n  const authorinfo = inforeader.authorinfo();\n\n  return <section className='row footer' id={props.id} data-testid={props.id} >\n    <a href={repoinfo.url} >{isDev(inforeader.appid())}</a>\n    <a href={authorinfo.url} title={authorinfo.name} >{authorinfo.alias}</a>\n  </section>;\n};\n\nexport default Footer;","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport Header from './header';\nimport Footer from './footer';\nimport {Routing} from './navigator';\nimport idGen from '../tools/idGen';\n\nimport '../styles/elements.css';\n\nconst Frontend = (props) => {\n  return <article className='column' id={props.id} data-testid={props.id} >\n    <Router>\n      <Header id={idGen(props.id, 'header')} />\n      <Routing baseId={`${props.id}.route`} />\n      <Footer id={idGen(props.id, 'footer')} />\n    </Router>\n  </article>;\n};\n\nexport default Frontend;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport Frontend from './components/frontend';\n\nimport inforeader from './tools/inforeader';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Frontend id={inforeader.appid()} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}